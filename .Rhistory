devtools::install_github("manateelab/EMAeval-R-Package")
devtools::install_github("manateelab/EMAeval-R-Package", force = TRUE)
EMAeval::flagging_plots(DF, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, item.colnames = colnames(DF[,4:11]) )
DF <- cbind(ID = c(rep(1001, 50), rep(1002, 50), rep(1003, 50), rep(1004, 50)), StartDate = rep(NA, 200), EndDate = rep(NA, 200), Q1 = rep(NA, 200), Q2 = rep(NA, 200), Q3 = rep(NA, 200), Q4 = rep(NA, 200), Q5 = rep(NA, 200), Q6 = rep(NA, 200), Q7 = rep(NA, 200),Q8 = rep(NA, 200))
DF <- as.data.frame(DF)
# IDs
UniqueID <- unique(DF$ID)
# Start Date
randomtime1001 <- sample(-120:120, 50, replace = TRUE)
randomtime1002 <- sample(-120:120, 50, replace = TRUE)
randomtime1003 <- sample(-120:120, 50, replace = TRUE)
randomtime1004 <- sample(-120:120, 50, replace = TRUE)
BaseDate <- lubridate::mdy_hms("1-1-2020 10:00:00")
DF$StartDate <- ymd_hms(DF$StartDate)
for (idx in 1:50){
DF$StartDate[idx] <- BaseDate + lubridate::days(idx) + lubridate::seconds(randomtime1001[idx])
}
for (idx in 51:100){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-50)) + lubridate::seconds(randomtime1002[(idx-50)])
}
for (idx in 101:150){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-100)) + lubridate::seconds(randomtime1003[(idx-100)])
}
for (idx in 151:200){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-150)) + lubridate::seconds(randomtime1004[(idx-150)])
}
# END DATE
# Time differences for End Date
time1001 <- sample(10:60, 50, replace = TRUE)
time1002 <- sample(7:18, 50, replace = TRUE)
time1003 <- sample(1:1000, 50, replace = TRUE)
time1004 <- sample(10:280, 50, replace = TRUE)
DF$EndDate <- ymd_hms(DF$EndDate)
for (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
for (idx in 51:100){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate + lubridate::seconds(time1002[(idx-50)])
}
for (idx in 101:150){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1003[(idx-100)])
}
for (idx in 151:200){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1004[(idx-150)])
}
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
# EMAeval::TPI_cutoff(DF, cutoff = 2, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, mandatory.response = TRUE, item.colnames = colnames(DF[,4:11]), ID.colname = "ID")
# DATA FOR Qs
data1001 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
data1002 <- matrix(sample(45:55, 400, replace = TRUE), nrow = 50, ncol = 8)
data1003 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
data1004 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
data1002
time1002
View(time1002)
40/50
for (idx in 1:50){
DF[idx, 4:11] <- data1001[idx,]
}
for (idx in 51:100){
DF[idx, 4:11] <- data1002[idx-50,]
}
for (idx in 101:150){
DF[idx, 4:11] <- data1003[idx-100,]
}
for (idx in 151:200){
DF[idx, 4:11] <- data1001[idx-150,]
}
DF
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
or (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
for (idx in 51:100){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate + lubridate::seconds(time1002[(idx-50)])
}
for (idx in 101:150){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1003[(idx-100)])
}
for (idx in 151:200){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1004[(idx-150)])
}
for (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
for (idx in 51:100){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate + lubridate::seconds(time1002[(idx-50)])
}
DF
DF$StartDate <- ymd_hms(DF$StartDate)
for (idx in 1:50){
DF$StartDate[idx] <- BaseDate + lubridate::days(idx) + lubridate::seconds(randomtime1001[idx])
}
for (idx in 51:100){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-50)) + lubridate::seconds(randomtime1002[(idx-50)])
}
for (idx in 101:150){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-100)) + lubridate::seconds(randomtime1003[(idx-100)])
}
for (idx in 151:200){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-150)) + lubridate::seconds(randomtime1004[(idx-150)])
}
DF$EndDate <- ymd_hms(DF$EndDate)
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
for (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
DF
DF$StartDate <- ymd_hms(DF$StartDate)
DF$StartDate <- lubridate::ymd_hms(DF$StartDate)
DF
for (idx in 1:50){
DF$StartDate[idx] <- BaseDate + lubridate::days(idx) + lubridate::seconds(randomtime1001[idx])
}
DF
for (idx in 51:100){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-50)) + lubridate::seconds(randomtime1002[(idx-50)])
}
for (idx in 101:150){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-100)) + lubridate::seconds(randomtime1003[(idx-100)])
}
for (idx in 151:200){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-150)) + lubridate::seconds(randomtime1004[(idx-150)])
}
DF
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
for (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
for (idx in 51:100){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate + lubridate::seconds(time1002[(idx-50)])
}
for (idx in 101:150){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1003[(idx-100)])
}
for (idx in 151:200){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1004[(idx-150)])
}
DF
time1001
write.csv(DF, "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/EMAevalDATA.csv", row.names = FALSE)
EMAeval::flagging_plots(DF, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, item.colnames = colnames(DF[,4:11]) )
EMAeval::Combined_cutoff_percent(DF, SD.cutoff = 5, TPI.cutoff = 2, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, mandatory.response = TRUE, item.colnames = colnames(DF[,4:11]), ID.colname = "ID")
getwd
getwd()
devtools::use_data(DF,EMAeval_Data)
save(DF, file = "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/data/EMAeval_Data.RData")
save(DF, file = "data/EMAeval_Data.RData")
f
save(DF, file = "data/EMAeval_Data.RData")
getwd()
setwd"/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval"()
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval")
getwd
getwd()
save(DF, file = "data/EMAeval_Data.RData")
save(DF, file = "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/data/EMAeval_Data.RData")
save(DF, file = "EMAeval_Data.RData")
NEWDF<- load(file = "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/data/EMAeval_Data.RData")
NEWDF
load("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/data/EMAeval_Data.RData")
typeof(DF)
DF <- as.data.frame(DF)
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/data")
save(DF, file = "EMAeval_Data.RData")
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval")
load(file = "data/EMAeval_Data.RData")
devtools::document()
getwd()
devtools::document()
devtools::document()
devtools::document()
devtools::missing_s3()
devtools::install_github("manateelab/EMAeval-R-Package")
EMAeval::DF
EMAeval_Data <- as.data.frame(DF)
write.csv(EMAeval_Data, "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/EMAevalDATA.csv", row.names = FALSE)
getwd()
save(EMAeval_Data, file = "data/EMAeval_Data.RData")
devtools::install_github("manateelab/EMAeval-R-Package")
library(EMAeval)
EMAeval::DF
devtools::install_github("manateelab/EMAeval-R-Package")
devtools::install_github("manateelab/EMAeval-R-Package", force = TRUE)
EMAeval::DF
EMAeval::DF
DF <- EMAeval::DF
?flagging_plots
?DF
View(DF)
flagging_plots(DF, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, item.colnames = colnames(DF[,4:11]))
load(file = "data/EMAeval_Data.RData")
flagging_plots(EMAeval_Data, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, item.colnames = colnames(DF[,4:11]))
install.packages("kableExtra")
devtools::install_github("manateelab/EMAeval-R-Package")
devtools::install_github("manateelab/EMAeval-R-Package", force = TRUE)
library(EMAeval)
load(file = "data/EMAeval_Data.RData")
getwd()
setwd
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval")
load(file = "data/EMAeval_Data.RData")
save(EMAeval_Data, file = "data/EMAeval_Data.RData")
getwd()
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(EMAeval)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(opts.label="kill_prefix")
EMAeval_Data <- EMAeval::DF
kable(EMAeval_Data[c(1,51,101,151),], caption = "EMAeval_Data Example", row.names = FALSE) %>%
kable_styling() %>%
scroll_box(width = "920px", height = "420px")
DF <- cbind(ID = c(rep(1001, 50), rep(1002, 50), rep(1003, 50), rep(1004, 50)), StartDate = rep(NA, 200), EndDate = rep(NA, 200), Q1 = rep(NA, 200), Q2 = rep(NA, 200), Q3 = rep(NA, 200), Q4 = rep(NA, 200), Q5 = rep(NA, 200), Q6 = rep(NA, 200), Q7 = rep(NA, 200),Q8 = rep(NA, 200))
DF <- as.data.frame(DF)
# IDs
UniqueID <- unique(DF$ID)
# Start Date
randomtime1001 <- sample(-120:120, 50, replace = TRUE)
randomtime1002 <- sample(-120:120, 50, replace = TRUE)
randomtime1003 <- sample(-120:120, 50, replace = TRUE)
randomtime1004 <- sample(-120:120, 50, replace = TRUE)
BaseDate <- lubridate::mdy_hms("1-1-2020 10:00:00")
DF$StartDate <- lubridate::ymd_hms(DF$StartDate)
for (idx in 1:50){
DF$StartDate[idx] <- BaseDate + lubridate::days(idx) + lubridate::seconds(randomtime1001[idx])
}
for (idx in 51:100){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-50)) + lubridate::seconds(randomtime1002[(idx-50)])
}
for (idx in 101:150){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-100)) + lubridate::seconds(randomtime1003[(idx-100)])
}
for (idx in 151:200){
DF$StartDate[idx] <- BaseDate + lubridate::days((idx-150)) + lubridate::seconds(randomtime1004[(idx-150)])
}
# END DATE
# Time differences for End Date
time1001 <- sample(10:60, 50, replace = TRUE)
time1002 <- sample(7:18, 50, replace = TRUE)
time1003 <- sample(1:1000, 50, replace = TRUE)
time1004 <- sample(10:280, 50, replace = TRUE)
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
for (idx in 1:50){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1001[idx])
}
for (idx in 51:100){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate + lubridate::seconds(time1002[(idx-50)])
}
for (idx in 101:150){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1003[(idx-100)])
}
for (idx in 151:200){
StartDate <- lubridate::ymd_hms(DF$StartDate[idx])
DF$EndDate[idx] <- StartDate +  lubridate::seconds(time1004[(idx-150)])
}
DF$EndDate <- lubridate::ymd_hms(DF$EndDate)
# EMAeval::TPI_cutoff(DF, cutoff = 2, ttc.colnames = c("StartDate", "EndDate"), number.items = 8, mandatory.response = TRUE, item.colnames = colnames(DF[,4:11]), ID.colname = "ID")
# DATA FOR Qs
data1001 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
data1002 <- matrix(sample(45:55, 400, replace = TRUE), nrow = 50, ncol = 8)
data1003 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
data1004 <- matrix(sample(1:100, 400, replace = TRUE), nrow = 50, ncol = 8)
for (idx in 1:50){
DF[idx, 4:11] <- data1001[idx,]
}
for (idx in 51:100){
DF[idx, 4:11] <- data1002[idx-50,]
}
for (idx in 101:150){
DF[idx, 4:11] <- data1003[idx-100,]
}
for (idx in 151:200){
DF[idx, 4:11] <- data1004[idx-150,]
}
EMAeval_Data <- as.data.frame(DF)
EMAeval_Data
write.csv(EMAeval_Data, "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAevalDATA.csv", row.names = FALSE)
save(EMAeval_Data, file = "data/EMAeval_Data.RData")
getwd()
setwd("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval/")
save(EMAeval_Data, file = "data/EMAeval_Data.RData")
devtools::install_github("manateelab/EMAeval-R-Package")
EMAeval::DF
EMAeval::DF[151,]
load(file = "data/EMAeval_Data.RData")
DATA<- load(file = "data/EMAeval_Data.RData")
load(file = "data/EMAeval_Data.RData")
View(EMAeval_Data)
EMAeval_Data
EMAeval_Data[151,]
EMAeval_Data[1,]
EMAeval_Data<-read.csv(EMAeval_Data, "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAevalDATA.csv")
EMAeval_Data<-read.csv("/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAevalDATA.csv")
EMAeval_Data[1,]
EMAeval_Data[151,]
library(usethis)
usethis::use_data(EMAeval_Data, internal = FALSE)
devtools::install_github("manateelab/EMAeval-R-Package")
EMAeval::DF
EMAeval::DF[1,]
EMAeval::DF[151,]
devtools::document()
load(file = "data/EMAeval_Data.rda")
devtools::install_github("manateelab/EMAeval-R-Package")
EMAeval::DF
EMAeval::EMAeval_Data
knitr::opts_chunk$set(echo = TRUE)
library(EMAeval)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(opts.label="kill_prefix")
EMAeval_Data <- EMAeval::EMAeval_Data
kable(EMAeval_Data[c(1,51,101,151),], caption = "EMAeval_Data Example", row.names = FALSE) %>%
kable_styling() %>%
scroll_box(width = "920px", height = "420px")
# WD = "/Volumes/Groups/AHeller_Lab/Undergrad/NKraus/SCRIPTS/EMAeval"
flagging_df(EMAeval::EMAeval_Data, ttc.colnames = c("StartDate", "EndDate"), item.colnames = colnames(EMAeval::EMAeval_Data[,4:11]))
EMAeval_Data[1,]
library(EMAeval)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(opts.label="kill_prefix")
EMAeval_Data <- EMAeval::EMAeval_Data
kable(EMAeval_Data[c(1,56,111,172),], caption = "EMAeval_Data Example", row.names = TRUE) %>%
kable_styling() %>%
scroll_box(width = "920px", height = "420px")
?flagging_plots
knitr::opts_chunk$set(echo = TRUE)
library(EMAeval)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(opts.label="kill_prefix")
EMAeval_Data <- EMAeval::EMAeval_Data
kable(EMAeval_Data[c(1,56,111,172),], caption = "EMAeval_Data Example", row.names = TRUE) %>%
kable_styling()
?TPI_cutoff
?kable
library(EMAeval)
?SD_cutoff
?Combined_cutoff
library(rmarkdown)
?github_document
install.pacakges("rmarkdown")
install.packages("rmarkdown")
